Last login: Mon Oct 28 11:00:36 on ttys000
Air-de-Mac:~ mac$ ls
AndroidStudioProjects		Public
Applications			QLData
Desktop				T6345D7481438D05BF
Documents			VirtualBox VMs
Downloads			bin
Library				database.db
Movies				eclipse-workspace
Music				iMyfone_restore_cache
NetBeansProjects		java_error_in_studio_66794.log
Pictures			pmd-eclipse.log
Projects			spoon-examples
Air-de-Mac:~ mac$ cd Desktop/
Air-de-Mac:Desktop mac$ ls
Archive
BOOKS
CDS
Candidature
Capture d’écran 2019-10-01 à 16.33.28.png
Fac
GIFTS
LOTTERY.jpg
Medical
NAIM
OPENCLASSROOM
PHOTOS
TRAVAIL
cn
merge_from_ofoct.jpg
titre.jpg
titresejourcheri.jpg
Air-de-Mac:Desktop mac$ mkdir Git_GitHub
Air-de-Mac:Desktop mac$ ls
Archive
BOOKS
CDS
Candidature
Capture d’écran 2019-10-01 à 16.33.28.png
Fac
GIFTS
Git_GitHub
LOTTERY.jpg
Medical
NAIM
OPENCLASSROOM
PHOTOS
TRAVAIL
cn
merge_from_ofoct.jpg
titre.jpg
titresejourcheri.jpg
Air-de-Mac:Desktop mac$ cd Git_GitHub/
Air-de-Mac:Git_GitHub mac$ ls
Air-de-Mac:Git_GitHub mac$ touch readme.txt
Air-de-Mac:Git_GitHub mac$ ls
readme.txt
Air-de-Mac:Git_GitHub mac$ pwd
/Users/mac/Desktop/Git_GitHub
Air-de-Mac:Git_GitHub mac$ ls
README.txt
Air-de-Mac:Git_GitHub mac$ cd ..
Air-de-Mac:openclassrooms mac$ ls
Git			git_p2_activité.txt
Air-de-Mac:openclassrooms mac$ cd Gi
-bash: cd: Gi: No such file or directory
Air-de-Mac:openclassrooms mac$ cd Git
Air-de-Mac:Git mac$ ls
README.txt
Air-de-Mac:Git mac$ git init
Initialized empty Git repository in /Users/mac/Desktop/openclassrooms/Git/.git/
Air-de-Mac:Git mac$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	README.txt

nothing added to commit but untracked files present (use "git add" to track)
Air-de-Mac:Git mac$ git add README.txt 
Air-de-Mac:Git mac$ git commit -m "git initialiser"
[master (root-commit) 4fe37b1] git initialiser
 1 file changed, 1 insertion(+)
 create mode 100644 README.txt
Air-de-Mac:Git mac$ git push origin master 
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
Air-de-Mac:Git mac$ git push https://github.com/Sowsow20/GIT  master 
Username for 'https://github.com': naimprestige@hotmail.com
Password for 'https://naimprestige@hotmail.com@github.com': 
remote: Invalid username or password.
fatal: Authentication failed for 'https://github.com/Sowsow20/GIT/'
Air-de-Mac:Git mac$ git push https://github.com/Sowsow20/GIT  master 
Username for 'https://github.com': naimprestige@gmail.com
Password for 'https://naimprestige@gmail.com@github.com': 

remote: Invalid username or password.
fatal: Authentication failed for 'https://github.com/Sowsow20/GIT/'
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ git push https://github.com/Sowsow20/GIT  master 
Username for 'https://github.com': naimprestige@gmail.com
Password for 'https://naimprestige@gmail.com@github.com': 
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 371 bytes | 371.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/Sowsow20/GIT
 * [new branch]      master -> master
Air-de-Mac:Git mac$ git remote add origin https://github.com/Sowsow20/GIT
Air-de-Mac:Git mac$ ls
README.txt
Air-de-Mac:Git mac$ touch index.html
Air-de-Mac:Git mac$ touch file.css
Air-de-Mac:Git mac$ git add index.html 
Air-de-Mac:Git mac$ git commit origin master
error: pathspec 'origin' did not match any file(s) known to git.
error: pathspec 'master' did not match any file(s) known to git.
Air-de-Mac:Git mac$ git commit -m "création de la page index.html"
[master a34892e] création de la page index.html
 1 file changed, 13 insertions(+)
 create mode 100644 index.html
Air-de-Mac:Git mac$ git push origin master
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 492 bytes | 492.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/Sowsow20/GIT
   4fe37b1..a34892e  master -> master
Air-de-Mac:Git mac$ git commit -m "edition de la page index"
On branch master
Changes not staged for commit:
	modified:   index.html

no changes added to commit
Air-de-Mac:Git mac$ git commit -m -a  "création de la page index.html"
error: pathspec 'création de la page index.html' did not match any file(s) known to git.
Air-de-Mac:Git mac$ git commit -m -a "edition de la page index"
error: pathspec 'edition de la page index' did not match any file(s) known to git.
Air-de-Mac:Git mac$ git commit  -a -m "edition de la page index"
[master 82cd1cb] edition de la page index
 1 file changed, 17 insertions(+), 2 deletions(-)
Air-de-Mac:Git mac$ touch file.css
Air-de-Mac:Git mac$ cat file.css
Air-de-Mac:Git mac$ git add file.css 
Air-de-Mac:Git mac$ git commit -m "Ajout du style css"
[master 4b44147] Ajout du style css
 1 file changed, 8 insertions(+)
 create mode 100644 file.css
Air-de-Mac:Git mac$ git push origin master 
Counting objects: 6, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (6/6), done.
Writing objects: 100% (6/6), 1.17 KiB | 1.17 MiB/s, done.
Total 6 (delta 0), reused 0 (delta 0)
To https://github.com/Sowsow20/GIT
   a34892e..4b44147  master -> master
Air-de-Mac:Git mac$ git checkout 
M	index.html
Air-de-Mac:Git mac$ git checkout index.html 
Air-de-Mac:Git mac$ git checkout 4b44147
Note: checking out '4b44147'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at 4b44147... Ajout du style css
Air-de-Mac:Git mac$ git checkout master
Switched to branch 'master'
Air-de-Mac:Git mac$ git statut
git: 'statut' is not a git command. See 'git --help'.

The most similar command is
	status
Air-de-Mac:Git mac$ git status
On branch master
nothing to commit, working tree clean
Air-de-Mac:Git mac$ git branche new-branch
git: 'branche' is not a git command. See 'git --help'.

The most similar command is
	branch
Air-de-Mac:Git mac$ git branch new-branch
Air-de-Mac:Git mac$ git checkout new-branch
M	file.css
M	index.html
Switched to branch 'new-branch'
Air-de-Mac:Git mac$ git status
On branch new-branch
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   file.css
	modified:   index.html

no changes added to commit (use "git add" and/or "git commit -a")
Air-de-Mac:Git mac$ git commit -m "Manipulation des branches"
On branch new-branch
Changes not staged for commit:
	modified:   file.css
	modified:   index.html

no changes added to commit
Air-de-Mac:Git mac$ git commit -a  -m "Manipulation des branches"
[new-branch 6c29371] Manipulation des branches
 2 files changed, 18 insertions(+), 7 deletions(-)
Air-de-Mac:Git mac$ git push origin master
Everything up-to-date
Air-de-Mac:Git mac$ git branch
  master
* new-branch
Air-de-Mac:Git mac$ git push origin master
Everything up-to-date
Air-de-Mac:Git mac$ git brancch
git: 'brancch' is not a git command. See 'git --help'.

The most similar command is
	branch
Air-de-Mac:Git mac$ git branch
  master
* new-branch
Air-de-Mac:Git mac$ git checkout master
Switched to branch 'master'
Air-de-Mac:Git mac$ git checkout new-branch
Switched to branch 'new-branch'
Air-de-Mac:Git mac$ git push origin new-branch
Counting objects: 4, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 1.61 KiB | 329.00 KiB/s, done.
Total 4 (delta 0), reused 0 (delta 0)
remote: 
remote: Create a pull request for 'new-branch' on GitHub by visiting:
remote:      https://github.com/Sowsow20/GIT/pull/new/new-branch
remote: 
To https://github.com/Sowsow20/GIT
 * [new branch]      new-branch -> new-branch
Air-de-Mac:Git mac$ git branch
  master
* new-branch
Air-de-Mac:Git mac$ git checkout master
Switched to branch 'master'
Air-de-Mac:Git mac$  git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   index.html

no changes added to commit (use "git add" and/or "git commit -a")
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$  git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   index.html

no changes added to commit (use "git add" and/or "git commit -a")
Air-de-Mac:Git mac$ git commit
On branch master
Changes not staged for commit:
	modified:   index.html

no changes added to commit
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ git commit
On branch master
Changes not staged for commit:
	modified:   index.html

no changes added to commit
Air-de-Mac:Git mac$ git commit -m 'Edition page index.html(Manipulation des branches)'
On branch master
Changes not staged for commit:
	modified:   index.html

no changes added to commit
Air-de-Mac:Git mac$ git commit -a -m 'Edition page index.html(Manipulation des branches)'
[master f53c1a7] Edition page index.html(Manipulation des branches)
 1 file changed, 23 insertions(+), 6 deletions(-)
Air-de-Mac:Git mac$ git push origin master 
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 1.61 KiB | 1.61 MiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/Sowsow20/GIT
   4b44147..f53c1a7  master -> master
Air-de-Mac:Git mac$ git user
git: 'user' is not a git command. See 'git --help'.

The most similar command is
	subtree
Air-de-Mac:Git mac$ git --help
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
Air-de-Mac:Git mac$ git account
git: 'account' is not a git command. See 'git --help'.
Air-de-Mac:Git mac$ git user-name
git: 'user-name' is not a git command. See 'git --help'.
Air-de-Mac:Git mac$  git status
On branch master
nothing to commit, working tree clean
Air-de-Mac:Git mac$ git log
commit f53c1a738550f90d323f9b92e4a68ba2bf5b4ef6 (HEAD -> master, origin/master)
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Mon Nov 4 17:20:53 2019 +0100

    Edition page index.html(Manipulation des branches)

commit 4b4414752330a5ed2c4a4d23c72fdf217ca41fdc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 16:13:21 2019 +0100

    Ajout du style css

commit 82cd1cbb9f908b3a69fabde6af4e7c2dc15280e8
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:57:48 2019 +0100

    edition de la page index

commit a34892ecea3aef5ba02e43045ecc4bd7d4f30ebc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:07:08 2019 +0100

    création de la page index.html

commit 4fe37b196bc9f3ba010144d694a0f70453fd06e1
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 01:19:58 2019 +0100

    git initialiser
Air-de-Mac:Git mac$ git log
commit f53c1a738550f90d323f9b92e4a68ba2bf5b4ef6 (HEAD -> master, origin/master)
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Mon Nov 4 17:20:53 2019 +0100

    Edition page index.html(Manipulation des branches)

commit 4b4414752330a5ed2c4a4d23c72fdf217ca41fdc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 16:13:21 2019 +0100

    Ajout du style css

commit 82cd1cbb9f908b3a69fabde6af4e7c2dc15280e8
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:57:48 2019 +0100

    edition de la page index

commit a34892ecea3aef5ba02e43045ecc4bd7d4f30ebc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:07:08 2019 +0100

    création de la page index.html

commit 4fe37b196bc9f3ba010144d694a0f70453fd06e1
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 01:19:58 2019 +0100

    git initialiser
Air-de-Mac:Git mac$ git sign up
git: 'sign' is not a git command. See 'git --help'.

The most similar commands are
	stage
	svn
Air-de-Mac:Git mac$ git  up
git: 'up' is not a git command. See 'git --help'.

The most similar commands are
	pull
	push
Air-de-Mac:Git mac$ git out
git: 'out' is not a git command. See 'git --help'.

The most similar command is
	gui
Air-de-Mac:Git mac$ git -- help
Unknown option: --
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ git --help
usage: git [--version] [--help] [-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone      Clone a repository into a new directory
   init       Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add        Add file contents to the index
   mv         Move or rename a file, a directory, or a symlink
   reset      Reset current HEAD to the specified state
   rm         Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect     Use binary search to find the commit that introduced a bug
   grep       Print lines matching a pattern
   log        Show commit logs
   show       Show various types of objects
   status     Show the working tree status

grow, mark and tweak your common history
   branch     List, create, or delete branches
   checkout   Switch branches or restore working tree files
   commit     Record changes to the repository
   diff       Show changes between commits, commit and working tree, etc
   merge      Join two or more development histories together
   rebase     Reapply commits on top of another base tip
   tag        Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch      Download objects and refs from another repository
   pull       Fetch from and integrate with another repository or a local branch
   push       Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
Air-de-Mac:Git mac$ git config --global user.email"naimprestige@gmail.com"
Air-de-Mac:Git mac$ git congig --global user.email"naimprestige@gmail.com"
git: 'congig' is not a git command. See 'git --help'.

The most similar command is
	config
Air-de-Mac:Git mac$ git config --global user.email"naimprestige@gmail.com"
Air-de-Mac:Git mac$ git config --global user.email"naimprestige@gmail.com"
Air-de-Mac:Git mac$ git commit -m "test changing acc"
On branch master
nothing to commit, working tree clean
Air-de-Mac:Git mac$ git log
commit f53c1a738550f90d323f9b92e4a68ba2bf5b4ef6 (HEAD -> master, origin/master)
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Mon Nov 4 17:20:53 2019 +0100

    Edition page index.html(Manipulation des branches)

commit 4b4414752330a5ed2c4a4d23c72fdf217ca41fdc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 16:13:21 2019 +0100

    Ajout du style css

commit 82cd1cbb9f908b3a69fabde6af4e7c2dc15280e8
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:57:48 2019 +0100

    edition de la page index

commit a34892ecea3aef5ba02e43045ecc4bd7d4f30ebc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:07:08 2019 +0100

    création de la page index.html

commit 4fe37b196bc9f3ba010144d694a0f70453fd06e1
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 01:19:58 2019 +0100

    git initialiser
Air-de-Mac:Git mac$ git push origin master
Everything up-to-date
Air-de-Mac:Git mac$ git log
commit f53c1a738550f90d323f9b92e4a68ba2bf5b4ef6 (HEAD -> master, origin/master)
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Mon Nov 4 17:20:53 2019 +0100

    Edition page index.html(Manipulation des branches)

commit 4b4414752330a5ed2c4a4d23c72fdf217ca41fdc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 16:13:21 2019 +0100

    Ajout du style css

commit 82cd1cbb9f908b3a69fabde6af4e7c2dc15280e8
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:57:48 2019 +0100

    edition de la page index

commit a34892ecea3aef5ba02e43045ecc4bd7d4f30ebc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:07:08 2019 +0100

    création de la page index.html

commit 4fe37b196bc9f3ba010144d694a0f70453fd06e1
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 01:19:58 2019 +0100

    git initialiser
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ git log
commit f53c1a738550f90d323f9b92e4a68ba2bf5b4ef6 (HEAD -> master, origin/master)
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Mon Nov 4 17:20:53 2019 +0100

    Edition page index.html(Manipulation des branches)

commit 4b4414752330a5ed2c4a4d23c72fdf217ca41fdc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 16:13:21 2019 +0100

    Ajout du style css

commit 82cd1cbb9f908b3a69fabde6af4e7c2dc15280e8
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:57:48 2019 +0100

    edition de la page index

commit a34892ecea3aef5ba02e43045ecc4bd7d4f30ebc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:07:08 2019 +0100

    création de la page index.html

commit 4fe37b196bc9f3ba010144d694a0f70453fd06e1
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 01:19:58 2019 +0100

    git initialiser
Air-de-Mac:Git mac$ git log
commit f53c1a738550f90d323f9b92e4a68ba2bf5b4ef6 (HEAD -> master, origin/master)
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Mon Nov 4 17:20:53 2019 +0100

    Edition page index.html(Manipulation des branches)

commit 4b4414752330a5ed2c4a4d23c72fdf217ca41fdc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 16:13:21 2019 +0100

    Ajout du style css

commit 82cd1cbb9f908b3a69fabde6af4e7c2dc15280e8
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:57:48 2019 +0100

    edition de la page index

commit a34892ecea3aef5ba02e43045ecc4bd7d4f30ebc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:07:08 2019 +0100

    création de la page index.html

commit 4fe37b196bc9f3ba010144d694a0f70453fd06e1
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 01:19:58 2019 +0100

    git initialiser
Air-de-Mac:Git mac$ git config --global user.email"naimprestige@gmail.com"
Air-de-Mac:Git mac$ git config --global user.email"naimprestige@gmail.com"
Air-de-Mac:Git mac$ git log
commit f53c1a738550f90d323f9b92e4a68ba2bf5b4ef6 (HEAD -> master, origin/master)
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Mon Nov 4 17:20:53 2019 +0100

    Edition page index.html(Manipulation des branches)

commit 4b4414752330a5ed2c4a4d23c72fdf217ca41fdc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 16:13:21 2019 +0100

    Ajout du style css

commit 82cd1cbb9f908b3a69fabde6af4e7c2dc15280e8
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:57:48 2019 +0100

    edition de la page index

commit a34892ecea3aef5ba02e43045ecc4bd7d4f30ebc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:07:08 2019 +0100

    création de la page index.html

commit 4fe37b196bc9f3ba010144d694a0f70453fd06e1
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 01:19:58 2019 +0100

    git initialiser
Air-de-Mac:Git mac$ git help congig
No manual entry for gitcongig
Air-de-Mac:Git mac$ git help configà
No manual entry for gitconfigà
Air-de-Mac:Git mac$ git help config
Air-de-Mac:Git mac$ git config --global user.email"naimprestige@hotmail.fr"
Air-de-Mac:Git mac$ git config --global user.email"naimprestige@hotmail.fr"
Air-de-Mac:Git mac$ git config --global user.naim"sowsow20"
Air-de-Mac:Git mac$ git config --global user.name"sowsow20"
Air-de-Mac:Git mac$ git config --global user.name"sowsow20"
Air-de-Mac:Git mac$ git log
commit f53c1a738550f90d323f9b92e4a68ba2bf5b4ef6 (HEAD -> master, origin/master)
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Mon Nov 4 17:20:53 2019 +0100

    Edition page index.html(Manipulation des branches)

commit 4b4414752330a5ed2c4a4d23c72fdf217ca41fdc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 16:13:21 2019 +0100

    Ajout du style css

commit 82cd1cbb9f908b3a69fabde6af4e7c2dc15280e8
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:57:48 2019 +0100

    edition de la page index

commit a34892ecea3aef5ba02e43045ecc4bd7d4f30ebc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:07:08 2019 +0100

    création de la page index.html

commit 4fe37b196bc9f3ba010144d694a0f70453fd06e1
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 01:19:58 2019 +0100

    git initialiser
Air-de-Mac:Git mac$ git commit -a -m "Suppression de la clé github de keychainAccess et reconnexion avec le nv compte"
On branch master
nothing to commit, working tree clean
Air-de-Mac:Git mac$ git push origin master
Username for 'https://github.com': naimprestige@gmail.com 
Password for 'https://naimprestige@gmail.com@github.com': 
Everything up-to-date
Air-de-Mac:Git mac$ git commit -a -m "Suppression de la clé github de keychainAccess et reconnexion avec le nv compte"
On branch master
nothing to commit, working tree clean
Air-de-Mac:Git mac$ git push origin master
Everything up-to-date
Air-de-Mac:Git mac$ git commit -a -m "Suppression de la clé github de keychainAccess et reconnexion avec le nv compte"
[master 723070a] Suppression de la clé github de keychainAccess et reconnexion avec le nv compte
 1 file changed, 2 insertions(+)
Air-de-Mac:Git mac$ git push origin master
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 382 bytes | 382.00 KiB/s, done.
Total 3 (delta 2), reused 0 (delta 0)
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To https://github.com/Sowsow20/GIT
   f53c1a7..723070a  master -> master
Air-de-Mac:Git mac$ git config --global user.email"naimprestige@hotmail.fr"
Air-de-Mac:Git mac$ git config --global user.naim"sowsow20"
Air-de-Mac:Git mac$ git config --global user.name"sowsow20"
Air-de-Mac:Git mac$ git commit -a -m "Suppression de la clé github de keychainAccess et reconnexion avec le nv compte"
On branch master
nothing to commit, working tree clean
Air-de-Mac:Git mac$ git commit -a -m "Suppression de la clé github de keychainAccess et reconnexion avec le nv compte"
[master 47d5fd5] Suppression de la clé github de keychainAccess et reconnexion avec le nv compte
 1 file changed, 1 insertion(+), 1 deletion(-)
Air-de-Mac:Git mac$ git push origin master
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 357 bytes | 357.00 KiB/s, done.
Total 3 (delta 2), reused 0 (delta 0)
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To https://github.com/Sowsow20/GIT
   723070a..47d5fd5  master -> master
Air-de-Mac:Git mac$ git log
commit 47d5fd5ce3787296877b674ab049f205404dccd5 (HEAD -> master, origin/master)
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Mon Nov 4 18:19:45 2019 +0100

    Suppression de la clé github de keychainAccess et reconnexion avec le nv compte

commit 723070ac4379af77f6c0cbdd326cf0fca12bfba0
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Mon Nov 4 18:17:42 2019 +0100

    Suppression de la clé github de keychainAccess et reconnexion avec le nv compte

commit f53c1a738550f90d323f9b92e4a68ba2bf5b4ef6
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Mon Nov 4 17:20:53 2019 +0100

    Edition page index.html(Manipulation des branches)

commit 4b4414752330a5ed2c4a4d23c72fdf217ca41fdc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 16:13:21 2019 +0100

    Ajout du style css

commit 82cd1cbb9f908b3a69fabde6af4e7c2dc15280e8
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:57:48 2019 +0100

    edition de la page index

commit a34892ecea3aef5ba02e43045ecc4bd7d4f30ebc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:07:08 2019 +0100

    création de la page index.html

commit 4fe37b196bc9f3ba010144d694a0f70453fd06e1
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 01:19:58 2019 +0100

    git initialiser
Air-de-Mac:Git mac$ git log
commit 47d5fd5ce3787296877b674ab049f205404dccd5 (HEAD -> master, origin/master)
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Mon Nov 4 18:19:45 2019 +0100

    Suppression de la clé github de keychainAccess et reconnexion avec le nv compte

commit 723070ac4379af77f6c0cbdd326cf0fca12bfba0
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Mon Nov 4 18:17:42 2019 +0100

    Suppression de la clé github de keychainAccess et reconnexion avec le nv compte

commit f53c1a738550f90d323f9b92e4a68ba2bf5b4ef6
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Mon Nov 4 17:20:53 2019 +0100

    Edition page index.html(Manipulation des branches)

commit 4b4414752330a5ed2c4a4d23c72fdf217ca41fdc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 16:13:21 2019 +0100

    Ajout du style css

commit 82cd1cbb9f908b3a69fabde6af4e7c2dc15280e8
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:57:48 2019 +0100

    edition de la page index

commit a34892ecea3aef5ba02e43045ecc4bd7d4f30ebc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:07:08 2019 +0100

    création de la page index.html

commit 4fe37b196bc9f3ba010144d694a0f70453fd06e1
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 01:19:58 2019 +0100

    git initialiser
Air-de-Mac:Git mac$ git blame index.html 
a34892ec (Mouhali 2019-10-29 15:07:08 +0100  1) <!DOCTYPE html>
a34892ec (Mouhali 2019-10-29 15:07:08 +0100  2) <html>
a34892ec (Mouhali 2019-10-29 15:07:08 +0100  3) <head>
a34892ec (Mouhali 2019-10-29 15:07:08 +0100  4)         <title > GitHub </title>
a34892ec (Mouhali 2019-10-29 15:07:08 +0100  5)         <meta charset="utf-8">
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100  6)         <link type="text/css" rel="stylesheet" href="file.css" />
a34892ec (Mouhali 2019-10-29 15:07:08 +0100  7) </head>
a34892ec (Mouhali 2019-10-29 15:07:08 +0100  8) <body>
a34892ec (Mouhali 2019-10-29 15:07:08 +0100  9) <h1>GitHub, Qu'est-ce que c'est?</h1>
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 10) GitHub est un service  d'hébergement de repository de code en ligne, c’est un service gratuit d’hébergement de code open source en ligne . GitHub propose également des plans payants pour les projets de codes privés.
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 11) 
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 12) <h1>Faire votre premier commit </h1>
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 13)         <ol>
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 14)                 <li>Pour cela il suffit de créer un nouveau dossier.</li>
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 15)                 <li>Ouvrir la console dans le dossier </li>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 16)                 <li><span class="commandeBackCol">Git init</span></li>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 17)                 <li><span class="commandeBackCol">git add nomFichier.extension</span></li>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 18)                 <li><span class="commandeBackCol">git commit -m "message à afficher"</span></li> 
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 19)         </ol>
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 20) 
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 21) <h1>Récupérer votre code depuis GitHub vers votre machine locale </h1>
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 22) La récupération de code depuis GitHub se fait avec la commande suivante:
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 23) <span class="commandeBackCol">git clone lienFourniParGitHub</span>
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 24) 
a34892ec (Mouhali 2019-10-29 15:07:08 +0100 25) <h1>Mettre votre code sur GitHub </h1>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 26) L'envoie du code se fait grâce à cette commande : <span class="commandeBackCol">git push origin master</span>
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 27) <br>cette commande demande à Git d'envoyer les modifications du code dans la branche master du remote origin(GitHub). 
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 28) 
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 29) <h1>Créer des branches</h1>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 30) 
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 31) Un élément que vous allez être souvent amenés à utiliser lorsque vous travaillez sur un repo, ce sont les branches. Les branches permettent de travailler sur des versions de code qui divergent de la branche principale contenant votre code courant.<br>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 32) Créer des branches est très utiles lorqu'on veut tester de nouvelles expérimentations sur le projet en cours ou si on souhaite développer une fonctionnalité spécifique. Voyons les commandes Git qui vous permettent de manipuler les branche. Lorsque vous initialisez un repo Git, votre code est placé dans la branche principale appelée master par défaut.<br> 
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 33) Pour voir les branches présentes dans votre repo, utilisez la commande git branch. Elle vous retournera les branches présentes, et ajoutera une étoile devant la branche dans laquelle vous êtes placés. Par exemple, dans le 1er repos que vous avez créé dans la partie précédente, la commande git branch n'affichera qu'une seule branche, la branche principale dans laquelle vous vous situez : * master. <br>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 34) Pour créer une nouvelle branche, il vous suffit d'ajouter le nom de la branche à créer à la suite de la commande précédente :<span class="commandeBackCol">git branch nouvelle-branche</span><br>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 35)  Pour vous placer dans une autre branche à l'intérieur de votre repo, vous allez avoir besoin d'un nouveau mot-clé : checkout : <span class="commandeBackCol">git checkout nouvelle-branche</span><br>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 36)  Pour créer et se positionner dans la nouvelle branche on peut utiliser les deux commandes précedentes comme on peut utiliser directement la commande suivante:
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 37) <span class="commandeBackCol">git checkout -b ma-branche</span><br>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 38) <h1>Fusioner deux branches</h1>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 39) Lorsque vous travaillez sur plusieurs branches, il va souvent vous arriver de vouloir ajouter  dans une branche A les mises à jour que vous avez faites dans une autre branche B. Pour cela, on se place dans la branche A :
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 40) 
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 41) <span class="commandeBackCol">git checkout branchA</span>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 42) puis on fait un 
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 43) <span class="commandeBackCol">git merge brancheB</span>
723070ac (Mouhali 2019-11-04 18:17:42 +0100 44) 
47d5fd5c (Mouhali 2019-11-04 18:19:45 +0100 45) <h1>Résoudre les conflits ..</h1>
a34892ec (Mouhali 2019-10-29 15:07:08 +0100 46) </body>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 47) </html> 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ 
Air-de-Mac:Git mac$ git blame index.html 
a34892ec (Mouhali 2019-10-29 15:07:08 +0100  1) <!DOCTYPE html>
a34892ec (Mouhali 2019-10-29 15:07:08 +0100  2) <html>
a34892ec (Mouhali 2019-10-29 15:07:08 +0100  3) <head>
a34892ec (Mouhali 2019-10-29 15:07:08 +0100  4)         <title > GitHub </title>
a34892ec (Mouhali 2019-10-29 15:07:08 +0100  5)         <meta charset="utf-8">
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100  6)         <link type="text/css" rel="stylesheet" href="file.css" />
a34892ec (Mouhali 2019-10-29 15:07:08 +0100  7) </head>
a34892ec (Mouhali 2019-10-29 15:07:08 +0100  8) <body>
a34892ec (Mouhali 2019-10-29 15:07:08 +0100  9) <h1>GitHub, Qu'est-ce que c'est?</h1>
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 10) GitHub est un service  d'hébergement de repository de code en ligne, c’est un service gratuit d’hébergement de code open source en ligne . GitHub propose également des plans payants pour les projets de codes privés.
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 11) 
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 12) <h1>Faire votre premier commit </h1>
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 13)         <ol>
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 14)                 <li>Pour cela il suffit de créer un nouveau dossier.</li>
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 15)                 <li>Ouvrir la console dans le dossier </li>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 16)                 <li><span class="commandeBackCol">Git init</span></li>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 17)                 <li><span class="commandeBackCol">git add nomFichier.extension</span></li>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 18)                 <li><span class="commandeBackCol">git commit -m "message à afficher"</span></li> 
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 19)         </ol>
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 20) 
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 21) <h1>Récupérer votre code depuis GitHub vers votre machine locale </h1>
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 22) La récupération de code depuis GitHub se fait avec la commande suivante:
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 23) <span class="commandeBackCol">git clone lienFourniParGitHub</span>
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 24) 
a34892ec (Mouhali 2019-10-29 15:07:08 +0100 25) <h1>Mettre votre code sur GitHub </h1>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 26) L'envoie du code se fait grâce à cette commande : <span class="commandeBackCol">git push origin master</span>
82cd1cbb (Mouhali 2019-10-29 15:57:48 +0100 27) <br>cette commande demande à Git d'envoyer les modifications du code dans la branche master du remote origin(GitHub). 
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 28) 
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 29) <h1>Créer des branches</h1>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 30) 
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 31) Un élément que vous allez être souvent amenés à utiliser lorsque vous travaillez sur un repo, ce sont les branches. Les branches permettent de travailler sur des versions de code qui divergent de la branche principale contenant votre code courant.<br>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 32) Créer des branches est très utiles lorqu'on veut tester de nouvelles expérimentations sur le projet en cours ou si on souhaite développer une fonctionnalité spécifique. Voyons les commandes Git qui vous permettent de manipuler les branche. Lorsque vous initialisez un repo Git, votre code est placé dans la branche principale appelée master par défaut.<br> 
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 33) Pour voir les branches présentes dans votre repo, utilisez la commande git branch. Elle vous retournera les branches présentes, et ajoutera une étoile devant la branche dans laquelle vous êtes placés. Par exemple, dans le 1er repos que vous avez créé dans la partie précédente, la commande git branch n'affichera qu'une seule branche, la branche principale dans laquelle vous vous situez : * master. <br>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 34) Pour créer une nouvelle branche, il vous suffit d'ajouter le nom de la branche à créer à la suite de la commande précédente :<span class="commandeBackCol">git branch nouvelle-branche</span><br>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 35)  Pour vous placer dans une autre branche à l'intérieur de votre repo, vous allez avoir besoin d'un nouveau mot-clé : checkout : <span class="commandeBackCol">git checkout nouvelle-branche</span><br>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 36)  Pour créer et se positionner dans la nouvelle branche on peut utiliser les deux commandes précedentes comme on peut utiliser directement la commande suivante:
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 37) <span class="commandeBackCol">git checkout -b ma-branche</span><br>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 38) <h1>Fusioner deux branches</h1>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 39) Lorsque vous travaillez sur plusieurs branches, il va souvent vous arriver de vouloir ajouter  dans une branche A les mises à jour que vous avez faites dans une autre branche B. Pour cela, on se place dans la branche A :
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 40) 
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 41) <span class="commandeBackCol">git checkout branchA</span>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 42) puis on fait un 
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 43) <span class="commandeBackCol">git merge brancheB</span>
723070ac (Mouhali 2019-11-04 18:17:42 +0100 44) 
47d5fd5c (Mouhali 2019-11-04 18:19:45 +0100 45) <h1>Résoudre les conflits ..</h1>
a34892ec (Mouhali 2019-10-29 15:07:08 +0100 46) </body>
f53c1a73 (Mouhali 2019-11-04 17:20:53 +0100 47) </html> 
Air-de-Mac:Git mac$ git show a34892ec
commit a34892ecea3aef5ba02e43045ecc4bd7d4f30ebc
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Tue Oct 29 15:07:08 2019 +0100

    création de la page index.html

diff --git a/index.html b/index.html
new file mode 100644
index 0000000..1f9562d
--- /dev/null
+++ b/index.html
@@ -0,0 +1,13 @@
+<!DOCTYPE html>
+<html>
+<head>
+       <title > GitHub </title>
+       <meta charset="utf-8">
+</head>
+<body>
+<h1>GitHub, Qu'est-ce que c'est?</h1>
+<h1>Créer votre premier répository </h1>
+<h1>Récuperer votre code depuis GitHub vers votre machie locale </h1>
+<h1>Mettre votre code sur GitHub </h1>
+</body>
+</html>
\ No newline at end of file
Air-de-Mac:Git mac$ git show f53c1a73
commit f53c1a738550f90d323f9b92e4a68ba2bf5b4ef6
Author: Mouhali <mouhalichahinaz@gmail.com>
Date:   Mon Nov 4 17:20:53 2019 +0100

    Edition page index.html(Manipulation des branches)

diff --git a/index.html b/index.html
index b895005..ff69432 100644
--- a/index.html
+++ b/index.html
@@ -3,6 +3,7 @@
 <head>
        <title > GitHub </title>
        <meta charset="utf-8">
+       <link type="text/css" rel="stylesheet" href="file.css" />
 </head>
 <body>
 <h1>GitHub, Qu'est-ce que c'est?</h1>
@@ -12,17 +13,33 @@ GitHub est un service  d'hébergement de repository de code en ligne, c’est un
        <ol>
                <li>Pour cela il suffit de créer un nouveau dossier.</li>
                <li>Ouvrir la console dans le dossier </li>
-               <li>Git init</li>
-               <li>git add nomFichier.extension</li>
-               <li>git commit -m "message à afficher"</li> 
+               <li><span class="commandeBackCol">Git init</span></li>
+               <li><span class="commandeBackCol">git add nomFichier.extension</span></li>
+               <li><span class="commandeBackCol">git commit -m "message à afficher"</span></li> 
        </ol>
 
 <h1>Récupérer votre code depuis GitHub vers votre machine locale </h1>
 La récupération de code depuis GitHub se fait avec la commande suivante:
-git clone lienFourniParGitHub
+<span class="commandeBackCol">git clone lienFourniParGitHub</span>
 
 <h1>Mettre votre code sur GitHub </h1>
-L'envoie du code se fait grâce à cette commande : git push origin master
+L'envoie du code se fait grâce à cette commande : <span class="commandeBackCol">git push origin master</span>
 <br>cette commande demande à Git d'envoyer les modifications du code dans la branche master du remote origin(GitHub). 
+
+<h1>Créer des branches</h1>
+
+Un élément que vous allez être souvent amenés à utiliser lorsque vous travaillez sur un repo, ce sont les branches. Les branches permettent de travailler sur des versions de code qui divergent de la branche principale contenant votre code courant.<br>
+Créer des branches est très utiles lorqu'on veut tester de nouvelles expérimentations sur le projet en cours ou si on souhaite développer une fonctionnalité spécifique. Voyons les commandes Git qui vous permettent de manipuler les branche. Lorsque vous initialisez un repo Git, votre code est placé dans la branche principale appelée master par défaut.<br> 
+Pour voir les branches présentes dans votre repo, utilisez la commande git branch. Elle vous retournera les branches présentes, et ajoutera une étoile devant la branche dans laquelle vous êtes placés. Par exemple, dans le 1er repos que vous avez créé dans la partie précédente, la commande git branch n'affichera qu'une seule branche, la branche principale dans laquelle vous vous situez : * master. <br>
+Pour créer une nouvelle branche, il vous suffit d'ajouter le nom de la branche à créer à la suite de la commande précédente :<span class="commandeBackCol">git branch nouvelle-branche</span><br>
+ Pour vous placer dans une autre branche à l'intérieur de votre repo, vous allez avoir besoin d'un nouveau mot-clé : checkout : <span class="commandeBackCol">git checkout nouvelle-branche</span><br>
+ Pour créer et se positionner dans la nouvelle branche on peut utiliser les deux commandes précedentes comme on peut utiliser directement la commande suivante:
+<span class="commandeBackCol">git checkout -b ma-branche</span><br>
+<h1>Fusioner deux branches</h1>
+Lorsque vous travaillez sur plusieurs branches, il va souvent vous arriver de vouloir ajouter  dans une branche A les mises à jour que vous avez faites dans une autre branche B. Pour cela, on se place dans la branche A :
+
+<span class="commandeBackCol">git checkout branchA</span>
+puis on fait un 
+<span class="commandeBackCol">git merge brancheB</span>
 </body>
-</html>
\ No newline at end of file
+</html>        
Air-de-Mac:Git mac$ cat index.html
<!DOCTYPE html>
<html>
<head>
	<title > GitHub </title>
	<meta charset="utf-8">
	<link type="text/css" rel="stylesheet" href="file.css" />
</head>
<body>
<h1>GitHub, Qu'est-ce que c'est?</h1>
GitHub est un service  d'hébergement de repository de code en ligne, c’est un service gratuit d’hébergement de code open source en ligne . GitHub propose également des plans payants pour les projets de codes privés.

<h1>Faire votre premier commit </h1>
	<ol>
		<li>Pour cela il suffit de créer un nouveau dossier.</li>
		<li>Ouvrir la console dans le dossier </li>
		<li><span class="commandeBackCol">Git init</span></li>
		<li><span class="commandeBackCol">git add nomFichier.extension</span></li>
		<li><span class="commandeBackCol">git commit -m "message à afficher"</span></li> 
	</ol>

<h1>Récupérer votre code depuis GitHub vers votre machine locale </h1>
La récupération de code depuis GitHub se fait avec la commande suivante:
<span class="commandeBackCol">git clone lienFourniParGitHub</span>

<h1>Mettre votre code sur GitHub </h1>
L'envoie du code se fait grâce à cette commande : <span class="commandeBackCol">git push origin master</span>
<br>cette commande demande à Git d'envoyer les modifications du code dans la branche master du remote origin(GitHub). 

<h1>Créer des branches</h1>

Un élément que vous allez être souvent amenés à utiliser lorsque vous travaillez sur un repo, ce sont les branches. Les branches permettent de travailler sur des versions de code qui divergent de la branche principale contenant votre code courant.<br>
Créer des branches est très utiles lorqu'on veut tester de nouvelles expérimentations sur le projet en cours ou si on souhaite développer une fonctionnalité spécifique. Voyons les commandes Git qui vous permettent de manipuler les branche. Lorsque vous initialisez un repo Git, votre code est placé dans la branche principale appelée master par défaut.<br> 
Pour voir les branches présentes dans votre repo, utilisez la commande git branch. Elle vous retournera les branches présentes, et ajoutera une étoile devant la branche dans laquelle vous êtes placés. Par exemple, dans le 1er repos que vous avez créé dans la partie précédente, la commande git branch n'affichera qu'une seule branche, la branche principale dans laquelle vous vous situez : * master. <br>
Pour créer une nouvelle branche, il vous suffit d'ajouter le nom de la branche à créer à la suite de la commande précédente :<span class="commandeBackCol">git branch nouvelle-branche</span><br>
 Pour vous placer dans une autre branche à l'intérieur de votre repo, vous allez avoir besoin d'un nouveau mot-clé : checkout : <span class="commandeBackCol">git checkout nouvelle-branche</span><br>
 Pour créer et se positionner dans la nouvelle branche on peut utiliser les deux commandes précedentes comme on peut utiliser directement la commande suivante:
<span class="commandeBackCol">git checkout -b ma-branche</span><br>
<h1>Fusioner deux branches</h1>
Lorsque vous travaillez sur plusieurs branches, il va souvent vous arriver de vouloir ajouter  dans une branche A les mises à jour que vous avez faites dans une autre branche B. Pour cela, on se place dans la branche A :

<span class="commandeBackCol">git checkout branchA</span>
puis on fait un 
<span class="commandeBackCol">git merge brancheB</span>

<h1>Résoudre les conflits ..</h1>
<ul>ouvrir les fichier qui posent problème 
<li>choisir un des deux fichier puis le garder </li> 
<li>faire un git commit tout court</li>
<li>si on fait un git status avant de résoudre le conflit git va nous répondre que les deux branches n'ont pas été fusionnée et si on le fais après git va nous répondre que les deux branches on été fusionnée et cela est grâçe à git commit qui à informé git du choix du fichier qu'on a gardé.</li> </ul> 

</body>
</html>	Air-de-Mac:Git mac$ git blame index.html 
a34892ec (Mouhali           2019-10-29 15:07:08 +0100  1) <!DOCTYPE html>
a34892ec (Mouhali           2019-10-29 15:07:08 +0100  2) <html>
a34892ec (Mouhali           2019-10-29 15:07:08 +0100  3) <head>
a34892ec (Mouhali           2019-10-29 15:07:08 +0100  4)       <title > GitHub </title>
a34892ec (Mouhali           2019-10-29 15:07:08 +0100  5)       <meta charset="utf-8">
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100  6)       <link type="text/css" rel="stylesheet" href="file.css" />
a34892ec (Mouhali           2019-10-29 15:07:08 +0100  7) </head>
a34892ec (Mouhali           2019-10-29 15:07:08 +0100  8) <body>
a34892ec (Mouhali           2019-10-29 15:07:08 +0100  9) <h1>GitHub, Qu'est-ce que c'est?</h1>
82cd1cbb (Mouhali           2019-10-29 15:57:48 +0100 10) GitHub est un service  d'hébergement de repository de code en ligne, c’est un service gratuit d’hébergement de code open source en ligne . GitHub propose également des plans payants pour les projets de codes privés.
82cd1cbb (Mouhali           2019-10-29 15:57:48 +0100 11) 
82cd1cbb (Mouhali           2019-10-29 15:57:48 +0100 12) <h1>Faire votre premier commit </h1>
82cd1cbb (Mouhali           2019-10-29 15:57:48 +0100 13)       <ol>
82cd1cbb (Mouhali           2019-10-29 15:57:48 +0100 14)               <li>Pour cela il suffit de créer un nouveau dossier.</li>
82cd1cbb (Mouhali           2019-10-29 15:57:48 +0100 15)               <li>Ouvrir la console dans le dossier </li>
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 16)               <li><span class="commandeBackCol">Git init</span></li>
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 17)               <li><span class="commandeBackCol">git add nomFichier.extension</span></li>
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 18)               <li><span class="commandeBackCol">git commit -m "message à afficher"</span></li> 
82cd1cbb (Mouhali           2019-10-29 15:57:48 +0100 19)       </ol>
82cd1cbb (Mouhali           2019-10-29 15:57:48 +0100 20) 
82cd1cbb (Mouhali           2019-10-29 15:57:48 +0100 21) <h1>Récupérer votre code depuis GitHub vers votre machine locale </h1>
82cd1cbb (Mouhali           2019-10-29 15:57:48 +0100 22) La récupération de code depuis GitHub se fait avec la commande suivante:
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 23) <span class="commandeBackCol">git clone lienFourniParGitHub</span>
82cd1cbb (Mouhali           2019-10-29 15:57:48 +0100 24) 
a34892ec (Mouhali           2019-10-29 15:07:08 +0100 25) <h1>Mettre votre code sur GitHub </h1>
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 26) L'envoie du code se fait grâce à cette commande : <span class="commandeBackCol">git push origin master</span>
82cd1cbb (Mouhali           2019-10-29 15:57:48 +0100 27) <br>cette commande demande à Git d'envoyer les modifications du code dans la branche master du remote origin(GitHub). 
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 28) 
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 29) <h1>Créer des branches</h1>
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 30) 
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 31) Un élément que vous allez être souvent amenés à utiliser lorsque vous travaillez sur un repo, ce sont les branches. Les branches permettent de travailler sur des versions de code qui divergent de la branche principale contenant votre code courant.<br>
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 32) Créer des branches est très utiles lorqu'on veut tester de nouvelles expérimentations sur le projet en cours ou si on souhaite développer une fonctionnalité spécifique. Voyons les commandes Git qui vous permettent de manipuler les branche. Lorsque vous initialisez un repo Git, votre code est placé dans la branche principale appelée master par défaut.<br> 
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 33) Pour voir les branches présentes dans votre repo, utilisez la commande git branch. Elle vous retournera les branches présentes, et ajoutera une étoile devant la branche dans laquelle vous êtes placés. Par exemple, dans le 1er repos que vous avez créé dans la partie précédente, la commande git branch n'affichera qu'une seule branche, la branche principale dans laquelle vous vous situez : * master. <br>
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 34) Pour créer une nouvelle branche, il vous suffit d'ajouter le nom de la branche à créer à la suite de la commande précédente :<span class="commandeBackCol">git branch nouvelle-branche</span><br>
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 35)  Pour vous placer dans une autre branche à l'intérieur de votre repo, vous allez avoir besoin d'un nouveau mot-clé : checkout : <span class="commandeBackCol">git checkout nouvelle-branche</span><br>
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 36)  Pour créer et se positionner dans la nouvelle branche on peut utiliser les deux commandes précedentes comme on peut utiliser directement la commande suivante:
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 37) <span class="commandeBackCol">git checkout -b ma-branche</span><br>
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 38) <h1>Fusioner deux branches</h1>
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 39) Lorsque vous travaillez sur plusieurs branches, il va souvent vous arriver de vouloir ajouter  dans une branche A les mises à jour que vous avez faites dans une autre branche B. Pour cela, on se place dans la branche A :
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 40) 
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 41) <span class="commandeBackCol">git checkout branchA</span>
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 42) puis on fait un 
f53c1a73 (Mouhali           2019-11-04 17:20:53 +0100 43) <span class="commandeBackCol">git merge brancheB</span>
723070ac (Mouhali           2019-11-04 18:17:42 +0100 44) 
47d5fd5c (Mouhali           2019-11-04 18:19:45 +0100 45) <h1>Résoudre les conflits ..</h1>
00000000 (Not Committed Yet 2019-11-05 00:26:09 +0100 46) <ul>
00000000 (Not Committed Yet 2019-11-05 00:26:09 +0100 47) <li>ouvrir les fichier qui posent problème</li>        
00000000 (Not Committed Yet 2019-11-05 00:26:09 +0100 48) <li>choisir un des deux fichier puis le garder </li> 
00000000 (Not Committed Yet 2019-11-05 00:26:09 +0100 49) <li>faire un git commit tout court</li>
00000000 (Not Committed Yet 2019-11-05 00:26:09 +0100 50) <li>si on fait un git status avant de résoudre le conflit git va nous répondre que les deux branches n'ont pas été fusionnée et si on le fais apAir-de-Mac:Git mac$ touch .gitignore
Air-de-Mac:Git mac$ touch config.xml
Air-de-Mac:Git mac$ cat .gitignore
Air-de-Mac:Git mac$ config.xml
-bash: config.xml: command not found
Air-de-Mac:Git mac$ touch .gitignore
Air-de-Mac:Git mac$ touch gitignore
Air-de-Mac:Git mac$ cat gitignore
Air-de-Mac:Git mac$ config.xml
-bash: config.xml: command not found
Air-de-Mac:Git mac$ sublime config.xml
-bash: sublime: command not found
Air-de-Mac:Git mac$ ren gitignore .gitignore
-bash: ren: command not found
Air-de-Mac:Git mac$ ls
README.txt	config.xml	file.css	index.html
Air-de-Mac:Git mac$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	modified:   index.html

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	.gitignore

no changes added to commit (use "git add" and/or "git commit -a")
Air-de-Mac:Git mac$ git add .gitignore
Air-de-Mac:Git mac$ git commit -m ".gitignore file"
[master 894846e] .gitignore file
 1 file changed, 1 insertion(+)
 create mode 100644 .gitignore
Air-de-Mac:Git mac$ git push origin master 
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 360 bytes | 360.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To https://github.com/Sowsow20/GIT
   47d5fd5..894846e  master -> master
Air-de-Mac:Git mac$ touch database.yml
Air-de-Mac:Git mac$ touch fichierasupprimer.txt
Air-de-Mac:Git mac$ ls
README.txt		config.xml		database.yml		fichierasupprimer.txt	file.css		index.html
Air-de-Mac:Git mac$ cat .gitignore
config.xml
Air-de-Mac:Git mac$ .gitignore
-bash: .gitignore: command not found
Air-de-Mac:Git mac$ txt .gitignore
-bash: txt: command not found
Air-de-Mac:Git mac$ edit .gitignore
-bash: edit: command not found
Air-de-Mac:Git mac$ TextEdit .gitignore
-bash: TextEdit: command not found
Air-de-Mac:Git mac$ subl .gitignore
-bash: subl: command not found
Air-de-Mac:Git mac$ vi .gitignore

config.xml
database.yml

~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
~                                                                                                                                                                                                         
-- INSERT -- 
